{"version":3,"sources":["components/Form.js","components/Navigation.js","components/Article.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","textField","margin","spacing","unit","width","button","props","react_default","a","createElement","onSubmit","getNews","Grid_default","container","alignItems","item","xs","TextField_default","id","label","name","type","variant","className","classes","Button_default","color","Navigation","state","value","handleChange","event","_this","setState","onChange","this","BottomNavigation_default","showLabels","BottomNavigationAction_default","Component","article","backgroundColor","boxShadow","content","textAlign","description","sub_detail","md","href","url","urlToImage","src","alt","title","concat","author","source","publishedAt","Footer","style","marginTop","padding","API_KEY","App","keyword","articles","status","_callee","query","api_call","data","regenerator_default","wrap","_context","prev","next","preventDefault","console","log","target","elements","fetch","sent","json","error","stop","handleOnChange","_callee2","_context2","countryCode","CssBaseline_default","components_Form","components_Navigation","map","components_Article","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f0e5a74.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n    textField: {\n      margin: theme.spacing.unit,\n      width: '100%'\n    },\n    button: {\n      margin: theme.spacing.unit,\n      width: '95%'\n    }\n})\n\nconst Form = (props) => (\n    <form onSubmit={props.getNews}>\n        <Grid container spacing={8} alignItems='center'>\n            <Grid item xs={9}>\n                <TextField\n                id=\"outlined-search\"\n                label=\"Keyword or Phase Search\"\n                name=\"keyword\"\n                type=\"search\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                className={props.classes.textField}\n                />\n            </Grid>\n\n            <Grid item xs={3}>\n                <Button\n                className={props.classes.button}\n                color='primary'\n                type='submit'\n                variant='raised'\n                >\n                    Search\n                </Button> \n            </Grid>\n        </Grid>   \n        \n    </form>\n)\n\nexport default withStyles(styles)(Form)","import React, { Component } from 'react';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nclass Navigation extends Component {\n    state = {\n        value: 0,\n    };\n    \n    handleChange = (event, value) => {\n        this.setState({ \n            value: value \n        });\n        this.props.onChange(event, value)\n    };\n    render() { \n        const { classes } = this.props;\n        const { value } = this.state;\n\n        return (  \n            <BottomNavigation\n                value={value}\n                onChange={this.handleChange}\n                showLabels\n            >\n                <BottomNavigationAction label=\"Canada\" value=\"ca\" />\n                <BottomNavigationAction label=\"Thailand\" value=\"th\" />\n                <BottomNavigationAction label=\"Search Result\" value=\"\" />\n                <BottomNavigationAction label=\"United States\" value=\"us\" />\n                <BottomNavigationAction label=\"Japan\" value=\"jp\" />\n            </BottomNavigation>\n        );\n    }\n}\n \nexport default Navigation;","import React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid'\nimport { withStyles } from '@material-ui/core/styles'\nimport shadows from '@material-ui/core/styles/shadows';\n\nconst styles = {\n    article: {\n        width: '96%',\n        margin: '1rem 2%',\n        backgroundColor: 'white',\n        boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2)'\n    },\n    content: {\n        textAlign: 'left',\n    },\n    description: {\n        color: 'rgba(0, 0, 0, 0.60)'\n    },\n    sub_detail: {\n        color: 'rgba(0, 0, 0, 0.54)'\n    }\n\n    \n}\n\nconst Article = (props) => (\n    <Grid container spacing={32} className={props.classes.article}>\n        <Grid item md={4}>\n        <a href={props.url}>\n            {props.urlToImage && <img src={props.urlToImage} alt={props.title} />}\n            {!props.urlToImage && <p>Source</p>}\n        </a>\n        </Grid>\n\n        <Grid item md={8} className={props.classes.content}>\n        <h3>{props.title}</h3>\n        <p>\n            {props.content}\n        </p>\n        <p className={props.classes.description}>\n            {props.description !== '' && `Description: ${props.description}`}\n        </p>\n        <p className={props.classes.sub_detail}>\n            {props.author !== null && `By ${props.author}. `}\n            From <a href={props.url}>{props.source}</a>. Published at {props.publishedAt}\n        </p>\n        </Grid>\n\n    </Grid>\n)\n \nexport default withStyles(styles)(Article)","import React, { Component } from 'react';\n\nconst Footer= () => (\n    <div style={{textAlign: 'center', marginTop: '2rem', width: '100%', backgroundColor: 'white', padding: '1rem'}}>\n        <p style={{margin: 0}}>News from <a href='https://newsapi.org/'>NewsAPI.org</a> , Partial design by <a href='https://material-ui.com/'>Material-UI</a></p>\n        <p>Noppawit Hansompob</p>\n    </div>\n)\n \nexport default Footer","import React, { Component } from 'react';\n\nimport 'typeface-roboto';\nimport './App.css'\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Form from './components/Form'\nimport Navigation from './components/Navigation'\nimport Article from './components/Article'\nimport Footer from './components/Footer'\n\nconst API_KEY = 'ed0429d83eed40febac227e116d45763'\n\nclass App extends Component {\n  state = {\n    keyword: '',\n    articles: [],\n    status: true\n  }\n\n  getNews = async(event) => {\n    event.preventDefault()\n    console.log(this.state)\n\n    const query = event.target.elements.keyword.value\n\n\n    const url = `https://newsapi.org/v2/everything?q=${query}&apiKey=${API_KEY}&pageSize=3`\n\n    console.log(url)\n\n    const api_call = await fetch(url)\n\n    const data = await api_call.json()\n\n    console.log('data', data)\n    console.log('status:', data.status)\n    console.log('articles:', data.articles)\n    \n    if (data.status == 'ok'){\n      this.setState({\n        articles: data.articles,\n        keyword: query,\n        status: true\n      })\n    } else {\n      this.setState({\n        status: false,\n        error: `Error, Please input some keyword.`\n      })\n    }\n  }\n\n  handleOnChange = async(event, value) => {\n    console.log(value)\n    await this.setState({\n      countryCode: value\n    })\n\n    let url = ''\n\n    if(value == ''){\n      url = `https://newsapi.org/v2/everything?q=${this.state.keyword}&apiKey=${API_KEY}&pageSize=3`\n    } else {\n      url = `https://newsapi.org/v2/top-headlines?country=${value}&apiKey=${API_KEY}&pageSize=3`\n    }\n\n    console.log(url)\n\n    const api_call = await fetch(url)\n\n    const data = await api_call.json()\n\n    console.log('data', data)\n    console.log('status:', data.status)\n    console.log('articles:', data.articles)\n    \n    if (data.status == 'ok'){\n      this.setState({\n        articles: data.articles,\n        status: true\n      })\n    } else {\n      this.setState({\n        status: false,\n        error: `Cound not find any news.`\n      })\n    }\n\n  }\n  render() {\n    return (\n      <CssBaseline>\n        <div className='wrapper'>\n          <div className='title'>\n            <h1>React News App</h1>\n          </div>\n          <Form \n            getNews = {this.getNews}\n          />\n          <Navigation \n            value = { this.props.value}\n            onChange = { this.handleOnChange}\n          />\n          <div className='news_section'>\n            {!this.state.status && <p style={{textAlign: 'center'}}>{this.state.error}</p>}\n            {this.state.status && this.state.articles.map((article) => {\n              return (\n                <Article\n                source={article.source.name}\n                author={article.author}\n                title={article.title}\n                description={article.description}\n                url={article.url}\n                urlToImage={article.urlToImage}\n                publishedAt={article.publishedAt}\n                content={article.content}\n              />\n            )})}\n          </div>\n          <Footer />\n        </div> \n      </CssBaseline>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}